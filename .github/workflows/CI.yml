name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [14]
        include:
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Build
        env:
          NAPI_BUILD_ARCH: ${{ matrix.arch }}
        run: |
          npm run build -- --target_arch=${NAPI_BUILD_ARCH}

      - name: Rename Binary
        id: rename_binary
        run: |
          BINARY_NAME=node-rust-pty.${{ matrix.os == 'macos-latest' && matrix.arch == 'x64' && 'darwin-x64' || matrix.os == 'macos-latest' && matrix.arch == 'arm64' && 'darwin-arm64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || matrix.os == 'windows-latest' && 'win32-x64' }}.node
          echo "::set-output name=BINARY_NAME::$BINARY_NAME"
          mv ./build/Release/node-rust-pty.node $BINARY_NAME

      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.arch }}-binary
          path: ${{ steps.rename_binary.outputs.BINARY_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.rename_binary.outputs.BINARY_NAME }}
          asset_name: ${{ steps.rename_binary.outputs.BINARY_NAME }}
          asset_content_type: application/octet-stream
